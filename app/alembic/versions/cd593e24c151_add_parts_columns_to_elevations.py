"""add_parts_columns_to_elevations

Revision ID: cd593e24c151
Revises: 3a931d95f15a
Create Date: 2025-09-29 21:19:10.506506

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cd593e24c151'
down_revision: Union[str, Sequence[str], None] = '3a931d95f15a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('elevations', sa.Column('parts_data', sa.Text(), nullable=True, comment='Base64-encoded SQLite database from parts-list API'))
    op.add_column('elevations', sa.Column('parts_db_path', sa.String(length=500), nullable=True, comment='Local filesystem path to extracted SQLite file'))
    op.add_column('elevations', sa.Column('parts_count', sa.Integer(), nullable=True, comment='Number of parts/components'))
    op.add_column('elevations', sa.Column('has_parts_data', sa.Boolean(), nullable=True, comment='Whether parts list has been fetched'))
    op.add_column('elevations', sa.Column('parts_synced_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp of last parts sync'))
    
    # Set default value for existing rows
    op.execute("UPDATE elevations SET has_parts_data = FALSE WHERE has_parts_data IS NULL")
    
    # Now make the column NOT NULL
    op.alter_column('elevations', 'has_parts_data', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('elevations', 'parts_synced_at')
    op.drop_column('elevations', 'has_parts_data')
    op.drop_column('elevations', 'parts_count')
    op.drop_column('elevations', 'parts_db_path')
    op.drop_column('elevations', 'parts_data')
    # ### end Alembic commands ###
